version: '3.8'

services:
  gateway:
    build:
      dockerfile: .docker/prod/gateway/Dockerfile
    volumes:
      - ./storage/app/public:/var/www/html/public/storage:ro
    links:
      - app
    hostname: api
    ports:
      # Publish a port for status pages
      - "8001:8001"
    networks:
      - api
      - gateway
    restart: unless-stopped

  app:
    build:
      dockerfile: .docker/prod/app/Dockerfile
      args:
        IMAGE_REGISTRY: ${IMAGE_REGISTRY}
        IMAGE_TAG: ${IMAGE_TAG}
    environment:
      PHP_FPM_PM_MAX_CHILDREN: ${PHP_FPM_PM_MAX_CHILDREN:-5}
      PHP_FPM_PM_START_SERVERS: ${PHP_FPM_PM_START_SERVERS:-2}
      PHP_FPM_PM_MIN_SPARE_SERVERS: ${PHP_FPM_PM_MIN_SPARE_SERVERS:-1}
      PHP_FPM_PM_MAX_SPARE_SERVERS: ${PHP_FPM_PM_MAX_SPARE_SERVERS:-3}
    volumes:
      - ./storage:/var/www/html/storage
    links:
      - mysql
      - redis
    networks:
      - api
      - gateway
    restart: unless-stopped

  queue:
    build:
      dockerfile: .docker/prod/queue/Dockerfile
      args:
        IMAGE_REGISTRY: ${IMAGE_REGISTRY}
        IMAGE_TAG: ${IMAGE_TAG}
    volumes:
      - ./storage:/var/www/html/storage
    links:
      - mysql
      - redis
    networks:
      - api
    restart: unless-stopped

  schedule:
    build:
      dockerfile: .docker/prod/schedule/Dockerfile
      args:
        IMAGE_REGISTRY: ${IMAGE_REGISTRY}
        IMAGE_TAG: ${IMAGE_TAG}
    volumes:
      - ./storage:/var/www/html/storage
    links:
      - mysql
      - redis
    networks:
      - api
    restart: unless-stopped

  mysql:
    build:
      dockerfile: .docker/prod/mysql/Dockerfile
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql:/var/lib/mysql
    networks:
      - api
    restart: unless-stopped

  redis:
    build:
      dockerfile: .docker/prod/redis/Dockerfile
    volumes:
      - redis:/data
    networks:
      - api
    restart: unless-stopped

volumes:
  mysql:
    driver: local

  redis:
    driver: local

networks:
  api:
    name: api

  gateway:
    name: gateway
    external: true
